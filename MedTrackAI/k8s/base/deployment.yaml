apiVersion: apps/v1
kind: Deployment
metadata:
  name: medtracker-app
  labels:
    app: medtracker
    tier: application
spec:
  replicas: 3
  selector:
    matchLabels:
      app: medtracker
      tier: application
  template:
    metadata:
      labels:
        app: medtracker
        tier: application
    spec:
      containers:
      - name: medtracker
        image: ghcr.io/medtracker/medtracker:latest
        ports:
        - containerPort: 5000
        env:
        - name: NODE_ENV
          value: "production"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: medtracker-secrets
              key: database-url
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: medtracker-secrets
              key: openai-api-key
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
---
apiVersion: v1
kind: Service
metadata:
  name: medtracker-service
  labels:
    app: medtracker
    tier: application
spec:
  selector:
    app: medtracker
    tier: application
  ports:
  - protocol: TCP
    port: 80
    targetPort: 5000
  type: ClusterIP